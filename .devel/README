Руководство разработчика веб-интерфейса AVReg.

1 Требования.
-------------

1.1 К среде разработки.
 
 * Debian GNU/Linux или Ubuntu с установленной серверной частью AVReg
   http://avreg.net/download.html#devel
 * git
 * PHP_CodeSniffer >= 1.4
   # в репозитории может быть старой версии, нужно удалить и установить из PEAR
   $ sudo pear install PHP_CodeSniffer
 * php-cs-fixer (http://cs.sensiolabs.org/) c бинарным файлом "php-cs-fixer",
   установленным в один из каталогов указанных в переменной $PATH
 * Aаккаунт в github.com и форк с master-ветки репозитория
   https://github.com/avreg/avreg-site.git
 * Браузеры: FF(>=10)/Chrome(>=24) в средах Windows и Linux,
   IE (>=9) в Windows.

1.2 Требования к форматированию текста.

Стандарт для php,css и js файлов - "PSR-2":
https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md
 
1.3 Требования к именам файлов и каталогов.

* Регистр имён файлов и каталогов - нижний.
* Расширение для php скриптов - ".php",
        для включаемых файлов - ".inc.php".
* В именах файлов, состоящих из нескольких слов (фраз),
  допустимо использовать разделяющие символы "-" (предпочтительно)
  и "_" (нежелательно).
* Добавление новых файлов стороннего авторства допускается только:
  а) по согласованию,
  б) если лицензия исходного кода: BSD,MIT,APACHE и т.п.,
     допускающая использования в комерческих целях без каких либо условий.
* Добавление новых каталогов - по согласованию.

2 Порядок работы.
-----------------

2.1 Работа над задачами производиться на компьютере разработчика
в _локальной_ git-ветке (devel) форка https://github.com/{user}/avreg-site.

Прежде всего нужно активировать триггер git (1 раз за всё время нужно выполнить):
avreg-site-root $ .devel/enable-pre-commit-check

!!! Важно !!!
Перед внесением изменений в любой файл проекта 
необходимо выполнить проверку стиля его форматирования.
Если есть ошибки/предупреждения - форматировать код в соответствии с PSR-2
и закрывать рефакторинг отдельным коммитом.

После окончательного выполнения задачи (изменения кода)
необходимо проверить выполненные изменения согласно технического задания
_всеми_ браузерами, указанными в п.1.1.

После этого необходимо проверить стиль форматирования текста в соотв. с стандаром PSR-2.

Проверка:
avreg-site-root $ .devel/validator file1 file2 ...
или
avreg-site-root $ .devel/validator dir

Не должно быть ни ошибок ни предупреждений.

Для исправления ошибок можно воспользоваться fixer-ом
avreg-site-root $ .devel/fixer file1 file2 ...
или
avreg-site-root $ .devel/fixer dir
или автоформатером вашего редактора, настроенного на стиль кодирования PSR-2.

После исправления всех ошибок и предупреждений валидатора
вы делаете коммит (commit) в локальный репозиторий (в ветку devel).
Прим.: для небольших и средних задач очень важно придерживаться правила:
  1 задача = 1 коммит (за исключением коммитов на форматирование текстов).
Затем выкладываете (push) его (коммит) на github в ваш форк проекта avreg-site.

Сообщаете нам об этом событии (push) посредством эл-почты.

Мы, переключившись на вашу ветку devel, проверяем работу
и, если всё в порядке, вы делаете "merge request" в веб-интерфейсе github.

